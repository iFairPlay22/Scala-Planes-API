kind: Deployment
apiVersion: apps/v1
metadata:
  name: broker-deployment
  labels:
    app: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
        - name: broker
          image: confluentinc/cp-kafka:7.0.1
          ports:
            - containerPort: 9093
          env:
            - name: KAFKA_BROKER_ID
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: broker-broker-id
            - name: KAFKA_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: zookeeper-url
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: broker-listener-security-protocol-map
            - name: KAFKA_ADVERTISED_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: broker-advertised-listeners
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: broker-offsets-topic-replication-factor
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: broker-transaction-state-log-min-isr
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: broker-transaction-state-log-replication-factor
      initContainers:
        - name: wait-for-zookeeper
          image: busybox:1.28
          env:
            - name: SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: planes-config
                  key: zookeeper-service-name
            - name: RETRY_DELAY
              value: '15'
          command: ['sh', '-c', "until nslookup $SERVICE_NAME.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for $SERVICE_NAME; sleep $RETRY_DELAY; done; echo ; echo Service available: end of task!"]
---
apiVersion: v1
kind: Service
metadata:
  name: broker-service
spec:
  selector:
    app: broker
  ports:
    - protocol: TCP
      port: 9093
      targetPort: 9093