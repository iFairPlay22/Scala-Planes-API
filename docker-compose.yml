# docker-compose up

version: '3.8'

services:

  client:
    image: ghcr.io/lunatech-labs/lunatech-data-ingestion-platform-metroapi:1.0
    ports:
      - "3000:3000"

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=akka-cassandra-cluster

  cassandra-init:
    image: cassandra:latest
    depends_on:
      - cassandra
    volumes:
      - ./cassandra-init.cql:/cassandra-init.cql
    entrypoint:
      - bash
      - -c
      - |
        while ! bash -c "echo > /dev/tcp/cassandra/9042" 2> /dev/null; do sleep 1; done
        cqlsh cassandra < cassandra-init.cql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  broker-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:9092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:9092 --create --if-not-exists --topic vehicles --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:9092 --list
      "


  vehicles-api:
    image: vehicles-api:${VERSION}
    networks:
      - default
    environment:
      VEHICLE_API_PORT: 8080
    entrypoint:
      - bash
      - -c
      - |
        while ! bash -c "echo > /dev/tcp/cassandra/9042" 2> /dev/null; do sleep 1; done
        /opt/docker/bin/vehicles-api
    depends_on:
      - cassandra
      - cassandra-init

  vehicles-broker-producer:
    image: vehicles-broker-producer:${VERSION}
    networks:
      - default
    entrypoint:
      - bash
      - -c
      - |
        while ! bash -c "echo > /dev/tcp/broker/9092" 2> /dev/null; do sleep 1; done
        /opt/docker/bin/vehicles-broker-producer
    depends_on:
      - broker
      - broker-init

  vehicles-broker-consumer:
    image: vehicles-broker-consumer:${VERSION}
    networks:
      - default
    entrypoint:
      - bash
      - -c
      - |
        while ! bash -c "echo > /dev/tcp/cassandra/9042" 2> /dev/null; do sleep 1; done
        while ! bash -c "echo > /dev/tcp/broker/9092" 2> /dev/null; do sleep 1; done
        /opt/docker/bin/vehicles-broker-consumer
    depends_on:
      - cassandra
      - cassandra-init
      - broker
      - broker-init